import Graphic from "@arcgis/core/Graphic";

export function createSpace(
  id: number,
  name: string,
  coordinates: Array<Array<number>>,
  altitude: number,
  color: string
): Graphic {
  const prepareRings = coordinates.map((coordinate: Array<number>) => {
    return [...coordinate, altitude * 50];
  });

  // push first item again as a last item to close the polygon
  prepareRings.push(prepareRings[0]);

  const polygon = {
    type: "polygon", // autocasts as new Polygon()
    rings: prepareRings,
  };

  const fillSymbol = {
    type: "simple-fill", // autocasts as new SimpleFillSymbol()
    color: color, // color -> rgba // TODO: convert HEX to RGBA color
    attributes: {
      id: id,
      name: name,
    },
    outline: {
      // border
      // autocasts as new SimpleLineSymbol()
      color: [255, 255, 255],
      width: 1,
    },
  };

  return new Graphic({
    geometry: polygon,
    symbol: fillSymbol,
    attributes: {},
  });
}

// // GENERATED BY GITHUB COPILOT
// function convertHexToRGBA(hex: string, opacity: number) {
//   const r = parseInt(hex.slice(1, 3), 16);
//   const g = parseInt(hex.slice(3, 5), 16);
//   const b = parseInt(hex.slice(5, 7), 16);

//   return `rgba(${r}, ${g}, ${b}, ${opacity})`;
// }
