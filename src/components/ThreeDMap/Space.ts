import Graphic from "@arcgis/core/Graphic";
import TextSymbol from "@arcgis/core/symbols/TextSymbol";

export function createSpace(
  id: number,
  name: string,
  coordinates: Array<Array<number>>,
  altitude: number,
  color: string
): Array<Graphic> {
  const prepareRings = coordinates.map((coordinate: Array<number>) => {
    return [...coordinate, altitude * 50];
  });

  // push first item again as a last item to close the polygon
  prepareRings.push(prepareRings[0]);

  const polygon = {
    type: "polygon", // autocasts as new Polygon()
    rings: prepareRings,
  };

  const fillSymbol = {
    type: "simple-fill", // autocasts as new SimpleFillSymbol()
    color: color, // color -> rgba // TODO: convert HEX to RGBA color
    outline: {
      // border
      // autocasts as new SimpleLineSymbol()
      color: [255, 255, 255],
      width: 1,
    },
  };

  const textSymbol = new TextSymbol({
    color: "#7A003C",
    haloColor: "white",
    haloSize: "2px",
    text: name,
    xoffset: 0,
    yoffset: 0,
    font: {
      size: 12,
      family: "sans-serif",
      weight: "bolder",
    },
  });

  return [
    new Graphic({
      geometry: polygon,
      symbol: fillSymbol,
      attributes: {
        id: id,
        name: name,
      },
    }),
    new Graphic({
      geometry: polygon,
      symbol: textSymbol,
    }),
  ];
}

// // GENERATED BY GITHUB COPILOT
// function convertHexToRGBA(hex: string, opacity: number) {
//   const r = parseInt(hex.slice(1, 3), 16);
//   const g = parseInt(hex.slice(3, 5), 16);
//   const b = parseInt(hex.slice(5, 7), 16);

//   return `rgba(${r}, ${g}, ${b}, ${opacity})`;
// }

// function convertShortHexOtLongHexToRGBA(hex: string, opacity: number) {
//   let c: string;
//   if (/^#([A-Fa-f0-9]{3}){1,2}$/.test(hex)) {
//     c = hex.substring(1).split("");
//     if (c.length == 3) {
//       c = [c[0], c[0], c[1], c[1], c[2], c[2]];
//     }
//     c = "0x" + c.join("");
//     return (
//       "rgba(" + [(c >> 16) & 255, (c >> 8) & 255, c & 255].join(",") + ",1)"
//     );
//   }
//   throw new Error("Bad Hex");
// }
